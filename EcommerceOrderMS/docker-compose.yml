services:
  ecommerce.orderms.api:
    image: ${DOCKER_REGISTRY-}ecommerceordermsapi
    build:
      context: .
      dockerfile: Ecommerce.OrderMS.API/Dockerfile
    environment:
     - MONGODB_HOST=mongodb-container
     - MONGODB_PORT=27017
     - MONGODB_DATABASE=OrdersDatabase
     - UsersMicroserviceName=apigateway
     - UsersMicroservicePort=8080
     - ProductsMicroserviceName=apigateway
     - ProductsMicroservicePort=8080
     - REDIS_HOST=redis
     - REDIS_PORT=6379
     - RabbitMQ_HostName=rabbitmq
     - RabbitMQ_UserName=user
     - RabbitMQ_Password=password
     - RabbitMQ_Port=5672
     - RabbitMQ_Products_Exchange=product.exchange
    ports:
     - "7000:8080"
    networks:
     - orders-mongodb-network
     - ecommerce-network
    depends_on:
     - mongodb-container


  mongodb-container:
   image: mongo:latest
   ports:
    - "27017:27017"
   volumes:
    - ./mongodb-init:/docker-entrypoint-initdb.d
   networks:
    - orders-mongodb-network
     

  products-microservice:
   image: pelethecreator/ecommerceproductmsapi:latest
   environment:
    - ASPNETCORE_HTTP_PORTS=8080
    - ASPNETCORE_ENVIRONMENT=Development
    - MYSQL_HOST=mysql-container
    - MYSQL_PORT=3306
    - MYSQL_DATABASE=ecommerceproductsdatabase
    - MYSQL_USER=root
    - MYSQL_PASSWORD=admin
    - RabbitMQ_HostName=rabbitmq
    - RabbitMQ_UserName=user
    - RabbitMQ_Password=password
    - RabbitMQ_Port=5672
    - RabbitMQ_Products_Exchange=product.exchange
   ports:
    - "6000:8080"
   networks:
    - products-mysql-network
    - ecommerce-network
   depends_on:
    - mysql-container
  

  mysql-container:
   image: mysql:8.0
   environment:
    - MYSQL_ROOT_PASSWORD=admin
   ports:
    - "3307:3306"
   volumes:
    - ./mysql-init:/docker-entrypoint-initdb.d
   networks:
    - products-mysql-network


  users-microservice:
   image: pelethecreator/ecommerceusermsapi:latest 
   environment:
    - ASPNETCORE_HTTP_PORTS=8080
    - ASPNETCORE_HTTP_ENVIRONMENT=Development
    - POSTGRES_HOST=postgres-container
    - POSTGRES_PORT=5432
    - POSTGRES_DATABASE=eCommerceUsers
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=admin
   ports:
    - "5000:9090"
   networks:
    - users-postgres-network
    - ecommerce-network
   depends_on:
    - postgres-container


  postgres-container:
   image: postgres:13
   environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=admin
    - POSTGRES_DB=eCommerceUsers
   ports:
    - "5433:5432"
   volumes:
    - ./postgres-init:/docker-entrypoint-initdb.d
   networks:
    - users-postgres-network
  
  
  apigateway:
   image: apigateway
   build:
    context: .
    dockerfile: ../ApiGateway/Dockerfile
   ports:
    - "4000:8080"
   networks:
    - ecommerce-network
  
  rabbitmq:
   image: rabbitmq:3.13-management
   ports:
    - "5672:5672"
    - "15672:15672"
   environment:
    - RABBITMQ_DEFAULT_USER=user
    - RABBITMQ_DEFAULT_PASS=password
   networks:
    - ecommerce-network

networks:
 orders-mongodb-network:
  driver: bridge
 products-mysql-network:
  driver: bridge
 users-postgres-network:
  driver: bridge
 ecommerce-network:
  driver: bridge
